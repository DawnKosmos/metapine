// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: 01_ohclv.sql

package gen

import (
	"context"
	"time"
)

const readOHCL = `-- name: ReadOHCL :many
SELECT starttime, open, high, close, low, volume
FROM ohclv
WHERE index_id = $2
  AND resolution = $3
  AND starttime > $4
  AND starttime < $1
`

type ReadOHCLParams struct {
	Starttime   time.Time
	IndexID     int64
	Resolution  int32
	Starttime_2 time.Time
}

type ReadOHCLRow struct {
	Starttime time.Time
	Open      float32
	High      float32
	Close     float32
	Low       float32
	Volume    float32
}

func (q *Queries) ReadOHCL(ctx context.Context, arg ReadOHCLParams) ([]ReadOHCLRow, error) {
	rows, err := q.db.Query(ctx, readOHCL,
		arg.Starttime,
		arg.IndexID,
		arg.Resolution,
		arg.Starttime_2,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ReadOHCLRow
	for rows.Next() {
		var i ReadOHCLRow
		if err := rows.Scan(
			&i.Starttime,
			&i.Open,
			&i.High,
			&i.Close,
			&i.Low,
			&i.Volume,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

type WriteOHCLVParams struct {
	IndexID    int64
	Resolution int32
	Starttime  time.Time
	Open       float32
	High       float32
	Close      float32
	Low        float32
	Volume     float32
}
